@page "/resetPassword"

@inject IAppService AppService;
@inject IStringLocalizer<MyStrings> localizer
@inject IJSRuntime JS
@inject AlertMessages alertMsgs
@inject NavigationManager NavManager
@inject PageTitleService pageTitleService
@implements IDisposable

<h3>@localizer[StringDescriptionModel.account_reset_password]</h3>

<EditForm Model="@AppService.resetPasswordModel" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>@localizer[StringDescriptionModel.account_ent_new_password]</label>
        <input type="password" @bind-value="AppService.resetPasswordModel.Password" class="form-control" placeholder=@localizer[StringDescriptionModel.account_ent_new_password]>
        <ValidationMessage For="@(()=> AppService.resetPasswordModel.Password)" />
    </div>
    <div class="mt-2 form-group">
        <label>@localizer[StringDescriptionModel.account_password_again]</label>
        <input type="password" @bind-value="AppService.resetPasswordModel.ConfirmPassword" class="form-control" placeholder=@localizer[StringDescriptionModel.account_ent_password]>
        <ValidationMessage For="@(()=> AppService.resetPasswordModel.ConfirmPassword)" />
    </div>
    <div class="text-center mt-2">
        <button class="btn btn-primary" type="submit">
            <span class="@_spinnerClass" role="status" aria-hidden="true"></span>
            @localizer[StringDescriptionModel.account_submit]
        </button>
    </div>
</EditForm>

@if (fetchData == true)
{
    <Loading IsLoading="fetchData" LoadingText="@localizer[StringDescriptionModel.loading]" />
}

@code {
    private string _spinnerClass = "";
    private bool fetchData = false;

    protected override void OnInitialized()
    {
        pageTitleService.Title = "resetPassword";
        //   MainLayout.OnLanguageChange += StateHasChanged;
    }

    private async void Submit()
    {
        fetchData = true;
        var result = await AppService.ResetPassword(AppService.resetPasswordModel);
        fetchData = false;
        if (result.IsSuccess)
        {
            await JS.InvokeVoidAsync("alertMessage", $"{localizer[StringDescriptionModel.message_password_changed]}");
            NavManager.NavigateTo("/login");
        }
        else        
            await JS.InvokeVoidAsync("alertMessage", alertMsgs.ErrorAlert(pageTitleService.Title, result).Result);
    }

    void IDisposable.Dispose()
    {
    //    MainLayout.OnLanguageChange -= StateHasChanged;
    }
}
